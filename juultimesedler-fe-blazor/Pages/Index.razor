@page "/"
@using juultimesedler_fe_blazor.Shared.Models.DTOs;
@using Microsoft.Extensions.Configuration;
@inject IndexViewModel ViewModel;

<PageTitle>Index</PageTitle>

@*HEADLINE*@
<MudPaper Elevation="5" Class="pa-3 mt-5 d-flex justify-center flex-grow-1 gap-4">
    <MudText Typo="Typo.h4">Juul Timesedler</MudText>
</MudPaper>

@*WEEKS & DAYS*@
<MudPaper Elevation="5" Class="pa-4 my-4">
    <MudText Typo="Typo.h6">Weeks &amp; days</MudText>
    <MudDivider />

    @if (ViewModel.Timesheet is null)
    {
        <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
    }
    else
    {
        <MudAppBar Color="Color.Primary" Fixed="false">
            <MudIcon Icon="@Icons.Material.Filled.ChevronLeft" Title="Prev. Week" />
            <MudSpacer />
            <MudText Typo="Typo.h5">Week # @ViewModel.Timesheet.weekNumber</MudText>
            <MudSpacer />
            <MudIcon Icon="@Icons.Material.Filled.ChevronRight" Title="Next Week" />
        </MudAppBar>

        <MudTabs AlwaysShowScrollButtons="true"
                 Class="mt-4"
                 Color="@Color.Info"
                 Rounded="true">
            @foreach (var weekday in ViewModel.Timesheet.weekDays)
            {
                <MudTabPanel Text="@weekday" />
            }
        </MudTabs>
    }
</MudPaper>

<MudForm>
    @*PROJECTS*@
    <MudPaper Elevation="5" Class="pa-4 my-4">
        <MudItem>
            <MudText Typo="Typo.h6">Projects</MudText>
            <MudDivider />

            <MudAutocomplete @bind-Value="ViewModel.SelectedProject"
                             ToStringFunc="@(e=> e==null? "" : $"{e.ProjectId} - {e.ProjectName}")"
                                  Clearable
                             Label="Select project"
                             OnClearButtonClick="ViewModel.ClearProject"
                             SearchFunc="ViewModel.ChooseProject"
                             T="GetProjectDTO" />
        </MudItem>
    </MudPaper>

    @*STARTING TIME & ENDING TIME*@
    <MudPaper Elevation="5" Class="pa-4 my-4">
        @* STARTING TIME *@
        <MudItem>
            <MudText Typo="Typo.h6">Time</MudText>
            <MudTimePicker Adornment="Adornment.Start"
                           Label="Starting Time"
                           PickerVariant="PickerVariant.Dialog"
                           TimeEditMode="TimeEditMode.OnlyHours"
            @bind-Time="ViewModel.StartingTime">
                <PickerActions>
                    <MudButton Class="mud-theme-primary" @onclick="() => ViewModel.SetPredefinedMinutes(TimeType.StartTime, 0)">:00</MudButton>
                    <MudButton Class="mud-theme-primary" @onclick="() => ViewModel.SetPredefinedMinutes(TimeType.StartTime, 15)">:15</MudButton>
                    <MudButton Class="mud-theme-primary" @onclick="() => ViewModel.SetPredefinedMinutes(TimeType.StartTime, 30)">:30</MudButton>
                    <MudButton Class="mud-theme-primary" @onclick="() => ViewModel.SetPredefinedMinutes(TimeType.StartTime, 45)">:45</MudButton>
                    <MudButton Color="Color.Primary" OnClick="@(() => context.Close())">Ok</MudButton>
                </PickerActions>
            </MudTimePicker>

        </MudItem>
        <br />

        @* ENDING TIME *@
        <MudItem>
            <MudTimePicker Adornment="Adornment.Start"
                           Label="Ending Time"
                           PickerVariant="PickerVariant.Dialog"
                           TimeEditMode="TimeEditMode.OnlyHours"
            @bind-Time="ViewModel.EndingTime">
                <PickerActions>
                    <MudButton Class="mud-theme-primary" @onclick="() => ViewModel.SetPredefinedMinutes(TimeType.EndingTime, 0)">:00</MudButton>
                    <MudButton Class="mud-theme-primary" @onclick="() => ViewModel.SetPredefinedMinutes(TimeType.EndingTime, 15)">:15</MudButton>
                    <MudButton Class="mud-theme-primary" @onclick="() => ViewModel.SetPredefinedMinutes(TimeType.EndingTime, 30)">:30</MudButton>
                    <MudButton Class="mud-theme-primary" @onclick="() => ViewModel.SetPredefinedMinutes(TimeType.EndingTime, 45)">:45</MudButton>
                    <MudButton Color="Color.Primary" OnClick="@(() => context.Close())">Ok</MudButton>
                </PickerActions>
            </MudTimePicker>

        </MudItem>
    </MudPaper>

    @*TASKS*@
    <MudPaper Elevation="5" Class="pa-4 my-4">
        <MudText Typo="Typo.h6">Tasks</MudText>
        @*HERTIL BJA - overvej datagrid eller lign.*@
        <MudTextField @bind-Value="ViewModel.TasksSearchText" Label="Search" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Secondary" />
        <MudSelect T="string"
                   Label="Tasks"
                   MultiSelection="true"
                   Lines="7"
                   Variant="Variant.Outlined">
            <MudSelectItem T="string">Gips</MudSelectItem>
            <MudDivider DividerType="DividerType.FullWidth" />
            <MudSelectItem T="string">Rydde op</MudSelectItem>
            <MudDivider />
            <MudSelectItem T="string">Tømme container</MudSelectItem>
            <MudDivider />
            <MudSelectItem T="string">Afvig</MudSelectItem>
        </MudSelect>
    </MudPaper>

    @*COMMENTS*@
    <MudPaper Elevation="5" Class="pa-4 my-4">
        <MudText Typo="Typo.h6">Comments</MudText>
        <MudTextField T="string" Variant="Variant.Outlined" Text="200.- for diesel" Lines="5"></MudTextField>
    </MudPaper>

    @*SUBMIT*@
    <MudButton Class="mb-4"
               Color="Color.Primary"
               Variant="Variant.Filled">Send</MudButton>

</MudForm>

@code {
    protected override async Task OnInitializedAsync()
    {
        await ViewModel.Initialize();
    }
}