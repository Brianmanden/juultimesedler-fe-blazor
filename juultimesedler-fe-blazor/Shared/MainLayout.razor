@using System.Text.Json;
@using juultimesedler_fe_blazor.Shared.Models.DTOs;
@inherits LayoutComponentBase

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<style>
    .mud-main-content {
        padding-top: 15px;
    }

    .mud-container {
        padding-top: 15px;
    }

    .mud-paper {
        padding: 15px;
    }

    .company-headline {
        background: var(--mud-palette-primary-lighten);
        border-radius: 4px;
        box-shadow: var(--mud-elevation-5);
        color: var(--mud-palette-white);
        letter-spacing: 3px;
        margin: 10px 0 30px;
        padding: 10px;
        text-align: center;
    }

    .mud-typography-h6 {
        margin-bottom: 20px;
    }

    .submit-btn {
        box-shadow: var(--mud-elevation-5);
        margin-bottom: 10px;
        margin-top: 5px;
    }
</style>

<MudLayout>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large">

            @data.Count
            <MudList>
                @foreach (var item in data)
                {
                    <MudListItem>
                        @item.ProjectId
                        <br />
                        @item.ProjectName
                        <br />
                        @item.ProjectFullName
                    </MudListItem>
                    <MudDivider />
                }
            </MudList>

            @Body

        </MudContainer>
    </MudMainContent>

</MudLayout>

@code {
    HttpClient httpclient = new();

    private string baseUri = "https://localhost";
    private int port = 44352;
    private string endpointPrefix = "api";

    private List<GetProjectDTO> data = new();

    protected override async Task OnInitializedAsync()
    {
        string uri = baseUri + ":" + port + "/" + endpointPrefix + "/projects";
        var result = await GetProjects(uri);

        foreach (var item in result)
        {
            data.Add(item);
        }
    }

    public async Task<IEnumerable<GetProjectDTO>> GetProjects(string uri)
    {
        return await httpclient.GetFromJsonAsync<List<GetProjectDTO>>(uri);
    }
}